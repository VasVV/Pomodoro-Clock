{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["x","y","audio","Audio","App","props","start","play","reset","clearInterval","setState","breakCounter","sessionCounter","mainTimerMins","mainTimerSecs","breakTimerMins","breakTimerSecs","timerRunning","breakTimerRunning","console","log","state","breakCounterIncrement","breakCounterDecrement","sessionCounterIncrement","sessionCounterDecrement","breakInterval","setInterval","interval","breakTimer","startStop","bind","id","src","this","mins","secs","inc","dec","session","React","Component","BreakCounter","increment","decrement","onClick","SessionCounter","MainTimer","ReactDOM","render","document","getElementById","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","StrictMode"],"mappings":"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","file":"static/js/main.b145d2c9.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\n\nlet x, y;\nlet audio = new Audio(\"https://www.soundjay.com/button/button-2.mp3\");\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.startStop = this.startStop.bind(this);\n    this.state = {\n      breakCounter: 1,\n      sessionCounter: 1,\n      mainTimerMins: 1, //changed\n      mainTimerSecs: 0, //changed\n      breakTimerMins: 1,\n      breakTimerSecs: 0,\n      timerRunning: false,\n      breakTimerRunning: false,\n    };\n  }\n\n  start = () => {\n    audio.play();\n  };\n  reset = () => {\n    clearInterval(x);\n    clearInterval(y);\n    this.setState({\n      breakCounter: 5,\n      sessionCounter: 25,\n      mainTimerMins: 25,\n      mainTimerSecs: 0,\n      breakTimerMins: 5,\n      breakTimerSecs: 0,\n      timerRunning: false,\n      breakTimerRunning: false,\n    });\n    console.log(this.state);\n  };\n\n  breakCounterIncrement = () => {\n    if (this.state.breakCounter < 60) {\n      this.setState(\n        (state, props) => ({\n          breakCounter: state.breakCounter + 1,\n          breakTimerMins: state.breakTimerMins + 1,\n        }),\n        () => console.log(\"breakCounterIncrement\", this.state)\n      );\n    }\n  };\n  breakCounterDecrement = () => {\n    if (this.state.breakCounter >= 2 && this.state.breakCounter < 60) {\n      this.setState(\n        (state, props) => ({\n          breakCounter: state.breakCounter - 1,\n          breakTimerMins: state.breakTimerMins - 1,\n        }),\n        () => console.log(\"breakCounterDecrement\", this.state)\n      );\n    }\n  };\n\n  sessionCounterIncrement = () => {\n    if (this.state.sessionCounter > 0 && this.state.sessionCounter < 60) {\n      this.setState(\n        (state, props) => ({\n          sessionCounter: state.sessionCounter + 1,\n          mainTimerMins: state.mainTimerMins + 1,\n        }),\n        () => console.log(\"sessionCounterIncrement\", this.state)\n      );\n    }\n  };\n\n  sessionCounterDecrement = () => {\n    if (this.state.sessionCounter > 1 && this.state.sessionCounter < 60) {\n      this.setState(\n        (state, props) => ({\n          sessionCounter: state.sessionCounter - 1,\n          mainTimerMins: state.mainTimerMins - 1,\n        }),\n        () => console.log(\"sessionCounterDecrement\", this.state)\n      );\n    }\n  };\n\n  breakInterval = () => {\n    //alert('break');\n    y = setInterval(() => {\n      if (this.state.breakTimerMins == 0 && this.state.breakTimerSecs == 0) {\n        this.start();\n        clearInterval(y);\n        this.interval();\n        this.setState(\n          (state, props) => ({\n            breakTimerMins: state.breakCounter,\n            breakTimerSecs: 0,\n            breakTimerRunning: false,\n            timerRunning: true,\n          }),\n          () => console.log(\"breakRestore\", this.state)\n        );\n      }\n\n      if (this.state.breakTimerSecs > 0) {\n        this.setState(\n          (state, props) => ({\n            breakTimerSecs: state.breakTimerSecs - 1,\n          }),\n          () => console.log(\"breakTimerSecsDecrement\", this.state)\n        );\n      } else if (this.state.breakTimerSecs == 0) {\n        this.setState(\n          (state, props) => ({\n            breakTimerSecs: 59,\n            breakTimerMins: state.breakTimerMins - 1,\n          }),\n          () => console.log(\"breakTimerMinsDecrement\", this.state)\n        );\n      }\n    }, 1000);\n  };\n\n  breakTimer = () => {\n    if (!this.state.breakTimerRunning) {\n      this.setState({\n        breakTimerRunning: true,\n      });\n      this.breakInterval();\n    } else {\n      this.setState({\n        breakTimerRunning: false,\n      });\n      clearInterval(y);\n    }\n  };\n\n  interval = () => {\n    x = setInterval(() => {\n      if (this.state.mainTimerMins == 0 && this.state.mainTimerSecs == 0) {\n        this.start();\n        clearInterval(x);\n        this.breakTimer();\n        this.setState(\n          (state, props) => ({\n            mainTimerMins: state.sessionCounter,\n            mainTimerSecs: 0,\n            breakTimerRunning: true,\n            timerRunning: false,\n          }),\n          () => console.log(\"mainTimerRestore\", this.state)\n        );\n      }\n\n      if (this.state.mainTimerSecs > 0) {\n        this.setState((state, props) => ({\n          mainTimerSecs: state.mainTimerSecs - 1,\n        }));\n      } else if (this.state.mainTimerSecs == 0) {\n        this.setState((state, props) => ({\n          mainTimerSecs: 59,\n          mainTimerMins: state.mainTimerMins - 1,\n        }));\n      }\n    }, 1000);\n  };\n\n  startStop = () => {\n    if (!this.state.timerRunning && this.state.breakTimerSecs == 0) {\n      this.interval();\n      this.setState({\n        timerRunning: true,\n      });\n      console.log(this.state);\n    } else if (this.state.timerRunning && this.state.breakTimerSecs == 0) {\n      this.setState({\n        timerRunning: false,\n      });\n      clearInterval(x);\n      console.log(this.state);\n    } else if (!this.state.breakTimerRunning && this.state.breakTimerSecs > 0) {\n      this.breakInterval();\n      this.setState({\n        breakTimerRunning: true,\n      });\n      console.log(this.state);\n    } else if (this.state.breakTimerRunning && this.state.breakTimerSecs > 0) {\n      clearInterval(y);\n      this.setState({\n        breakTimerRunning: false,\n      });\n      console.log(this.state);\n    }\n  };\n\n  render() {\n    return (\n      <div>\n        <audio id=\"beep\" src=\"https://www.soundjay.com/button/button-2.mp3\" />\n\n        <MainTimer\n          breakTimerRunning={this.state.breakTimerRunning ? true : false}\n          timerRunning={this.state.timerRunning ? true : false}\n          reset={this.reset}\n          mins={\n            (this.state.mainTimerMins <= 0 && this.state.mainTimerSecs <= 0) ||\n            this.state.mainTimerSecs == 59\n              ? this.state.breakTimerMins\n              : this.state.mainTimerMins\n          }\n          secs={\n            (this.state.mainTimerMins <= 0 && this.state.mainTimerSecs <= 0) ||\n            this.state.mainTimerSecs == 59\n              ? this.state.breakTimerSecs\n              : this.state.mainTimerSecs\n          }\n          startStop={this.startStop}\n        />\n        <BreakCounter\n          inc={this.breakCounterIncrement}\n          dec={this.breakCounterDecrement}\n          breakCounter={this.state.breakCounter}\n        />\n        <SessionCounter\n          session={this.state.sessionCounter}\n          inc={this.sessionCounterIncrement}\n          dec={this.sessionCounterDecrement}\n        />\n      </div>\n    );\n  }\n}\n\nclass BreakCounter extends React.Component {\n  increment = () => {\n    this.props.inc(true);\n    console.log(this.props.breakCounter); //child props doesn't update\n  };\n\n  decrement = () => {\n    this.props.dec(true);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"break-label\">Break Length</h1>\n        <div id=\"controller\">\n          <i id=\"controls\" onClick={this.increment}>\n            &#8593;\n          </i>\n          <div id=\"break-length\" key={this.props.breakCounter}>\n            {this.props.breakCounter}\n          </div>\n          <i id=\"controls\" onClick={this.decrement}>\n            &#8595;\n          </i>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass SessionCounter extends React.Component {\n  increment = () => {\n    this.props.inc(true);\n    console.log(this.props.session);\n  };\n\n  decrement = () => {\n    this.props.dec(true);\n  };\n\n  render() {\n    return (\n      <div>\n        <h1 id=\"session-label\">Session length</h1>\n        <div id=\"controller\">\n          <i id=\"controls\" onClick={this.increment}>\n            &#8593;\n          </i>\n          <div id=\"session-length\">{this.props.session}</div>\n          <i id=\"controls\" onClick={this.decrement}>\n            &#8595;\n          </i>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass MainTimer extends React.Component {\n  reset = () => {\n    this.props.reset(true);\n  };\n  startStop = () => {\n    this.props.startStop\n      ? this.props.startStop(false)\n      : this.props.startStop(true);\n  };\n  render() {\n    return (\n      <div>\n        <span>\n          <h3>Pomodoro Clock</h3>\n        </span>\n        <div id=\"timer-label\">\n          {\" \"}\n          <h3>\n            {this.props.breakTimerRunning ? \"Break in progress...\" : \"\"}{\" \"}\n            {this.props.timerRunning ? \"Timer in progress...\" : \"\"}\n          </h3>\n        </div>\n        <div id=\"time-left\">\n          {this.props.mins < 10 ? \"0\" + this.props.mins : this.props.mins}:\n          {this.props.secs < 10 ? \"0\" + this.props.secs : this.props.secs}{\" \"}\n        </div>\n\n        <button id=\"start_stop\" onClick={this.startStop}></button>\n        <i id=\"reset\" onClick={this.reset}>\n          Reset\n        </i>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}